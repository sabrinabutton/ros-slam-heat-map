#!/usr/bin/env python

"""@package docstring
    @author Sabrina Button (sabrina.button@queensu.ca)
    @date April 2023
    @description Read eCO2 data from Adafruit SGP30 and publish via ROS

    Follows this wiring scheme and tutorial: 
    https://learn.adafruit.com/adafruit-sgp30-gas-tvoc-eco2-mox-sensor/circuitpython-wiring-test
"""

# libraries for reading adafruit SGP30 sensor
import time
import board
import busio
import adafruit_sgp30

# libraries for publishing data via ROS
import rospy
from std_msgs.msg import Int16

# Create library object using our Bus I2C port
i2c = busio.I2C(board.SCL, board.SDA, frequency=100000)

# Create library object on our I2C port
sgp30 = adafruit_sgp30.Adafruit_SGP30(i2c)

print("SGP30 serial #", [hex(i) for i in sgp30.serial])

# set baseline values
sgp30.set_iaq_baseline(0x8973, 0x8AAE)
sgp30.set_iaq_relative_humidity(celsius=22.1, relative_humidity=44)

# read and publish data


def CO2_publisher():
    # publish data to topic 'sgp30_data'
    pub = rospy.Publisher('sgp30_data', Int16, queue_size=10)
    # initialize node to publush data
    rospy.init_node('sgp30read', anonymous=False)
    rate = rospy.Rate(10)  # 10hz
    while not rospy.is_shutdown():  # while node is running
        co2_now = sgp30.eCO2  # read eCO2 data
        rospy.loginfo(co2_now)  # log data for debugging
        pub.publish(co2_now)    # publish data
        rate.sleep()  # sleep for 0.1 seconds


if __name__ == '__main__':
    try:
        CO2_publisher()
    except rospy.ROSInterruptException:
        pass
