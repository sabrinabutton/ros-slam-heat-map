#!/usr/bin/env python

""" @package docstring
    @author Sabrina Button
    @date March 2023
    @description Get CO2 data and current robot pose and publish it
"""
import rospy
import numpy as np
from std_msgs.msg import Int16
from std_msgs.msg import Int32MultiArray  # map created via LiDAR data
from geometry_msgs.msg import PoseStamped  # robot pose

current_x = 0
current_y = 0
raw_grid = np.zeros(shape=(2048, 2048))  # map is a 2048 array

ppm = 0


# def set_map(grid):
#     global raw_grid
#     if raw_grid == None:
#         raw_grid = np.array(grid)  # convert to numpy array


def set_pose(pose_obj):

    current_x = pose_obj.pose.position.x
    current_y = pose_obj.pose.position.y


def set_co2(co2):
    ppm = co2.data


def post_to_map(heat_map, x, y, ppm):
    # write to the current coordinate
    x = int(x)
    y = int(y)
    heat_map[x][y] = ppm
    rospy.loginfo("published a map!")
    pub = rospy.Publisher('heat_map_sender', Int32MultiArray, queue_size=10)
    pub.publish(data=heat_map)
    rospy.loginfo(heat_map)


def map_listener():
    rospy.init_node('heat_map_generator', anonymous=False)
    # send previous heat map
    # rospy.Subscriber('map', OccupancyGrid, set_map)  # gets occupancy grid
    # subscribes this node to sgp30 data to get the CO2 ppm
    rospy.Subscriber('sgp30_data', Int16, set_co2)
    # gets robot pose without covariance
    rospy.Subscriber('slam_out_pose', PoseStamped, set_pose)

    rate = rospy.Rate(10)


if __name__ == '__main__':
    try:

        map_listener()
        # if raw_grid != None:
        rospy.loginfo("loopy")  # PROBLEM NOT GETTING IN LOOP
        post_to_map(raw_grid, current_x, current_y, ppm)  # update map
        rospy.spin()

    except rospy.ROSInterruptException:
        pass
